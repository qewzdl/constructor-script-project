#!/usr/bin/env bash
set -euo pipefail

if [[ ${1:-} == "--help" || ${1:-} == "-h" ]]; then
        cat <<'USAGE'
Usage: ./deploy/quickstart.sh <domain> <email> [site-name]

Creates a production-ready configuration and launches the CMS with HTTPS
terminating reverse proxy and PostgreSQL via Docker Compose.

Arguments:
  <domain>     Fully qualified domain that should serve the site (e.g. blog.example.com).
  <email>      Email used for Let's Encrypt notifications.
  [site-name]  Optional public site name used in meta settings. Defaults to "Constructor Script".

The script requires Docker with the Compose plugin available as `docker compose`.
USAGE
        exit 0
fi

if [[ $# -lt 2 ]]; then
        echo "Usage: ./deploy/quickstart.sh <domain> <email> [site-name]" >&2
        exit 1
fi

DOMAIN=$1
EMAIL=$2
SITE_NAME=${3:-"Constructor Script"}

PYTHON_BIN=$(command -v python3 || command -v python || true)
if [[ -z "$PYTHON_BIN" ]]; then
        echo "Python 3 is required to generate secure credentials." >&2
        exit 1
fi

if ! command -v docker >/dev/null 2>&1; then
        echo "Docker is required to run this script." >&2
        exit 1
fi

if ! docker compose version >/dev/null 2>&1; then
        echo "Docker Compose plugin (docker compose) is required." >&2
        exit 1
fi

ROOT_DIR=$(cd "$(dirname "${BASH_SOURCE[0]}")/.." && pwd)
ENV_FILE="$ROOT_DIR/deploy/.env.production"

if [[ -f "$ENV_FILE" ]]; then
        echo "An existing deploy/.env.production file was found." >&2
        read -r -p "Overwrite it? [y/N] " answer
        case "$answer" in
                [Yy]*) ;;
                *) echo "Aborted."; exit 1;;
        esac
fi

JWT_SECRET=$($PYTHON_BIN - <<'PY'
import secrets
print(secrets.token_urlsafe(48))
PY
)

DB_PASSWORD=$($PYTHON_BIN - <<'PY'
import secrets,string
alphabet = string.ascii_letters + string.digits
print(''.join(secrets.choice(alphabet) for _ in range(24)))
PY
)

DATABASE_URL="postgres://bloguser:${DB_PASSWORD}@postgres:5432/blogdb?sslmode=disable"
SITE_DESCRIPTION="Powered by Constructor Script CMS"
SITE_NAME_ESC=${SITE_NAME//"/\"}
SITE_DESCRIPTION_ESC=${SITE_DESCRIPTION//"/\"}

cat > "$ENV_FILE" <<ENV
# Generated by deploy/quickstart.sh on $(date -Iseconds)
DB_USER=bloguser
DB_PASSWORD=$DB_PASSWORD
DB_NAME=blogdb
DB_SSLMODE=disable
DB_HOST=postgres
DB_PORT=5432
DATABASE_URL=$DATABASE_URL
SITE_DOMAIN=$DOMAIN
SITE_EMAIL=$EMAIL
SITE_NAME="$SITE_NAME_ESC"
SITE_DESCRIPTION="$SITE_DESCRIPTION_ESC"
SITE_URL=https://$DOMAIN
CORS_ORIGINS=https://$DOMAIN
ENVIRONMENT=production
PORT=8080
ENABLE_REDIS=false
ENABLE_EMAIL=false
ENABLE_METRICS=false
UPLOAD_DIR=./uploads
JWT_SECRET=$JWT_SECRET
ENV

chmod 600 "$ENV_FILE"

pushd "$ROOT_DIR/deploy" >/dev/null

docker compose --env-file .env.production -f docker-compose.prod.yml up -d --build

popd >/dev/null

echo "Deployment finished!"
echo "Your site should become available at https://$DOMAIN once DNS is pointing to this server."
